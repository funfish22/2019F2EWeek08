{"version":3,"sources":["resources/components/atoms/Logo/Logo.tsx","resources/components/atoms/Logo/index.tsx","resources/components/atoms/Breadcrumb/Breadcrumb.tsx","resources/components/atoms/Breadcrumb/index.tsx","resources/components/atoms/SearchBar/SearchBar.tsx","resources/components/atoms/SearchBar/index.tsx","resources/components/organisms/Navbar/Navbar.tsx","resources/components/organisms/Navbar/index.tsx","resources/components/atoms/Title/index.tsx","resources/components/atoms/Title/Title.tsx","resources/components/molecules/IconList/IconList.tsx","resources/components/molecules/IconList/index.tsx","resources/components/organisms/ToolBar/ToolBar.tsx","resources/components/organisms/ToolBar/index.tsx","resources/components/organisms/ListBar/ListBar.tsx","resources/components/organisms/ListBar/index.tsx","resources/components/atoms/FileFolder/FileFolder.tsx","resources/components/atoms/FileFolder/index.tsx","resources/components/molecules/FolderBlock/FolderBlock.tsx","resources/components/molecules/FolderBlock/index.tsx","resources/components/organisms/List/List.tsx","resources/components/organisms/List/index.tsx","reducer/index.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["Logo","props","state","LogoRoot","className","styled","span","Breadcrumb","this","source","Ul","map","row","Li","key","id","title","React","Component","defaultProps","ul","li","SearchBar","SearchBarRoot","Label","Input","type","Button","Icon","div","label","input","button","Navbar","Header","Container","Bread","Search","header","Title","children","IconList","IconListRoot","icon","icon_1","icon_2","ToolBar","Advanced","ToolBarRoot","TitleBlock","IconRoot","Hr","hr","ListBar","showIcon","Storage","FileFolder","star","handleAddStar","e","onClick","setState","FileFolderRoot","FileFolderName","FolderBlock","handleChecked","console","log","FolderBlockRoot","FolderBlockContainer","name","List","sortName","sortArray","stopPropagation","sort","a","b","ListRoot","ListHead","ListIcon","ListName","ListLocal","ListTime","ListSize","ListBody","ListLi","src","alt","local","time","size","changeSwitch","initState","array","ReducerRoot","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","App","handleOpenAdvanced","handleCloseAdvanced","ListBarFooter","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0acbd877.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {}\r\n\r\ninterface State {}\r\n\r\nfunction Logo(props: Props, state: State) {\r\n    return(\r\n        <LogoRoot className=\"icon-logo\">\r\n            <span className=\"path1\"></span>\r\n            <span className=\"path2\"></span>\r\n            <span className=\"path3\"></span>\r\n        </LogoRoot>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n\r\nconst LogoRoot = styled.span`\r\n    font-size: 45px;\r\n`;","import Logo from './Logo';\r\n\r\nexport default Logo;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst array = [\r\n    {\r\n        id: 0,\r\n        title: 'starred'\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'trash'\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    className?: string,\r\n    source?: Array<{\r\n        id: number,\r\n        title: string\r\n    }>\r\n}\r\n\r\ninterface State {}\r\n\r\nclass Breadcrumb extends React.Component<Props, State> {\r\n    static defaultProps = {\r\n        source: array\r\n    }\r\n    render() {\r\n        const {className, source} = this.props;\r\n        return(\r\n            <Ul className={className}>\r\n                {\r\n                    source && source.map((row) => (\r\n                        <Li key={row.id}>{row.title}</Li>\r\n                    ))\r\n                }\r\n            </Ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;\r\n\r\nconst Ul = styled.ul`\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst Li = styled.li`\r\n    text-transform: uppercase;\r\n    margin-right: 32px;\r\n    display: inline-block;\r\n\r\n    &:last-of-type {\r\n        margin-right: 0;\r\n    }\r\n`;","import Breadcrumb from './Breadcrumb';\r\n\r\nexport default Breadcrumb;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    className?: string,\r\n}\r\n\r\ninterface State {}\r\n\r\nclass SearchBar extends React.Component<Props, State> {\r\n    render() {\r\n        const { className } = this.props;\r\n        return(\r\n            <SearchBarRoot className={className}>\r\n                <Label>\r\n                    <Input type=\"text\" />\r\n                </Label>\r\n                <Button type=\"button\">\r\n                    <Icon className=\"icon-search-24px\"></Icon>\r\n                </Button>\r\n            </SearchBarRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\nconst SearchBarRoot = styled.div`\r\n    width: 540px;\r\n    max-width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #EFEFEF;\r\n    border-radius: 24px;\r\n    padding: 12px 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    border: none;\r\n    width: 100%;\r\n    background-color: transparent;\r\n    outline: none;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    min-width: 24px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n    font-size: 24px;\r\n`;","import SearchBar from './SearchBar';\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Logo from 'resources/components/atoms/Logo';\r\nimport Breadcrumb from 'resources/components/atoms/Breadcrumb';\r\nimport SearchBar from 'resources/components/atoms/SearchBar';\r\n\r\nconst source = [\r\n    {\r\n        id: 0,\r\n        title: 'starred'\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'trash'\r\n    }\r\n]\r\n\r\ninterface Props {}\r\n\r\ninterface State {}\r\n\r\nclass Navbar extends React.Component<Props, State> {\r\n    render() {\r\n        \r\n        return(\r\n            <Header>\r\n                <Container>\r\n                    <Logo />\r\n                    <Bread source={source}/>\r\n                    <Search/>\r\n                </Container>\r\n                \r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\nconst Header = styled.header`\r\n    background-color: #fff;\r\n    box-shadow: 0px 2px 0px #D5D5D5;\r\n    padding: 24px 0;\r\n    position: relative;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    max-width: 1110px;\r\n    width: calc(100% - 30px);\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Bread = styled(Breadcrumb)`\r\n    margin: 0 64px;\r\n`;\r\n\r\nconst Search = styled(SearchBar)`\r\n    margin-left: auto;\r\n`;","import Navbar from './Navbar';\r\n\r\nexport default Navbar;","import Title from './Title';\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    children: string,\r\n    className?: string\r\n}\r\n\r\ninterface State {}\r\n\r\nclass Title extends React.Component<Props, State> {\r\n    render() {\r\n        const { children, className} = this.props;\r\n        return(\r\n            <div className={className}>{children}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst array = [\r\n    {\r\n        id: 0,\r\n        icon: 'icon-cloud_upload-24px'\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: 'icon-create_new_folder-24px'\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    className?: string,\r\n    source?: Array<{\r\n        id: number,\r\n        icon: string\r\n    }>\r\n}\r\n\r\ninterface State {}\r\n\r\nclass IconList extends React.Component<Props, State> {\r\n    static defaultProps = {\r\n        source: array\r\n    }\r\n    render() {\r\n        const { className, source} = this.props;\r\n        return(\r\n            <IconListRoot className={className}>\r\n                {\r\n                    source && source.map((row) => (\r\n                        <Li key={row.id}>\r\n                            <Icon className={row.icon}/>\r\n                        </Li>\r\n                    ))\r\n                }\r\n            </IconListRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IconList;\r\n\r\nconst IconListRoot = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Li = styled.li`\r\n    margin: 0 16px;\r\n\r\n    &:first-of-type{\r\n        margin-left: 0;\r\n    }\r\n\r\n    &:last-of-type{\r\n        margin-right: 0;\r\n    }\r\n`;\r\n\r\nconst Icon = styled.span`\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n`;","import IconList from './IconList';\r\n\r\nexport default IconList;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Title from 'resources/components/atoms/Title';\r\nimport IconList from 'resources/components/molecules/IconList';\r\n\r\nconst icon_1 = [\r\n    {\r\n        id: 0,\r\n        icon: 'icon-cloud_upload-24px'\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: 'icon-create_new_folder-24px'\r\n    }\r\n]\r\n\r\nconst icon_2 = [\r\n    {\r\n        id: 0,\r\n        icon: 'icon-star-24px'\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: 'icon-cloud_download-24px'\r\n    },\r\n    {\r\n        id: 2,\r\n        icon: 'icon-link-24px'\r\n    },\r\n    {\r\n        id: 3,\r\n        icon: 'icon-delete-24px'\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    className?: string,\r\n    Advanced: boolean\r\n}\r\n\r\ninterface State {}\r\n\r\nclass ToolBar extends React.Component<Props, State> {\r\n    render() {\r\n        const { className, Advanced } = this.props;\r\n        return(\r\n            <ToolBarRoot className={className}>\r\n                <Container>\r\n                    <TitleBlock>My drive</TitleBlock>\r\n                    <IconRoot>\r\n                        <IconList source={icon_1} />\r\n                        { \r\n                            Advanced && (\r\n                                <>\r\n                                    <Hr />\r\n                                    <IconList source={icon_2} />\r\n                                </>\r\n                            )\r\n                        }\r\n                    </IconRoot>\r\n                    \r\n                </Container>\r\n            </ToolBarRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolBar;\r\n\r\nconst ToolBarRoot = styled.div`\r\n    padding: 24px 0;\r\n    background-color: #EFEFEF;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    max-width: 1110px;\r\n    width: calc(100% - 30px);\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst TitleBlock = styled(Title)`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst IconRoot = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: auto;\r\n`;\r\n\r\nconst Hr = styled.hr`\r\n    height: 23px;\r\n    width: 1px;\r\n    background-color: #707070;\r\n    border: none;\r\n    margin: 0 32px;\r\n`;\r\n","import ToolBar from './ToolBar';\r\n\r\nexport default ToolBar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Title from 'resources/components/atoms/Title';\r\nimport IconList from 'resources/components/molecules/IconList';\r\n\r\nconst icon_1 = [\r\n    {\r\n        id: 0,\r\n        icon: 'icon-view_list-24px'\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: 'icon-view_module-24px'\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    className?: string\r\n    children: string,\r\n    showIcon: boolean\r\n}\r\n\r\ninterface State { }\r\n\r\nclass ListBar extends React.Component<Props, State> {\r\n    render() {\r\n        const { children, showIcon, className } = this.props;\r\n        return (\r\n            <ToolBarRoot className={className}>\r\n                <Container>\r\n                    <TitleBlock>{children}</TitleBlock>\r\n                    {\r\n                        showIcon ? (\r\n                            <IconRoot>\r\n                                <IconList source={icon_1} />\r\n                            </IconRoot>\r\n                        ) : (\r\n                            <Storage>\r\n                                <span>16 gb </span> / <span>200 gb</span>\r\n                            </Storage>\r\n                        )\r\n                    }\r\n                </Container>\r\n            </ToolBarRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListBar;\r\n\r\nconst ToolBarRoot = styled.div`\r\n    padding: 16px 0;\r\n    margin-top: 32px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    max-width: 1110px;\r\n    width: calc(100% - 30px);\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst TitleBlock = styled(Title)`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nconst IconRoot = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: auto;\r\n`;\r\n\r\nconst Hr = styled.hr`\r\n    height: 23px;\r\n    width: 1px;\r\n    background-color: #707070;\r\n    border: none;\r\n    margin: 0 32px;\r\n`;\r\n\r\nconst Storage = styled.div`\r\n    text-transform: uppercase;\r\n    margin-left: 16px;\r\n`;\r\n","import ListBar from './ListBar';\r\n\r\nexport default ListBar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    children: string,\r\n    onClick: Function\r\n}\r\n\r\ninterface State {\r\n    star: boolean\r\n}\r\n\r\nclass FileFolder extends React.Component<Props, State> {\r\n\r\n    state = {\r\n        star: false\r\n    }\r\n\r\n    handleAddStar = (e: any) => {\r\n        const {onClick} = this.props;\r\n        const {star} = this.state;\r\n\r\n        this.setState({\r\n            star: !star\r\n        })\r\n\r\n        onClick(e)\r\n    }\r\n\r\n    render() {\r\n        const {children} = this.props;\r\n        const {star} = this.state;\r\n        return(\r\n            <FileFolderRoot onClick={this.handleAddStar}>\r\n                {\r\n                    !star ? <Icon className=\"icon-folder-24px\"></Icon> : <Icon className=\"icon-folder_special-24px\"></Icon>\r\n                }\r\n                {/* <FileFolderImg src={!star ? \"assets/img/folder-24px.svg\" : \"assets/img/folder_special-24px.svg\"} alt=\"\" /> */}\r\n                <FileFolderName>{children}</FileFolderName>\r\n            </FileFolderRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileFolder;\r\n\r\nconst FileFolderName = styled.span`\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    text-transform:capitalize;\r\n    transition: .5s;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-right: 16px;\r\n    font-size: 24px;\r\n`;\r\n\r\nconst FileFolderRoot = styled.div`\r\n    width: 100%;\r\n    max-width: 255px;\r\n    padding: 22px 24px 24px 24px;\r\n    border-top: 2px solid #fff;\r\n    box-shadow: 0px 2px 4px #00000029;\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    transition: .5s;\r\n    cursor: pointer;\r\n    margin: 12px 15px;\r\n\r\n    &:hover{\r\n        border-top-color: #2A8CFD;\r\n        &:after{\r\n\r\n        }\r\n\r\n        ${FileFolderName} {\r\n            color: #2A8CFD;\r\n        }\r\n    }\r\n`;","import FileFolder from './FileFolder';\r\n\r\nexport default FileFolder;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport FileFolder from 'resources/components/atoms/FileFolder';\r\n\r\nconst array = [\r\n    {\r\n        id: 0,\r\n        name: 'advertisement'\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'business'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'commercial'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'customer'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'facebook'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'growth hacker'\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Motion design'\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'web practice'\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    className?: string,\r\n    source: Array<{\r\n        id: number,\r\n        name: string\r\n    }>,\r\n    onClick: Function\r\n}\r\n\r\ninterface State {}\r\n\r\nclass FolderBlock extends React.Component<Props, State> {\r\n    static defaultProps = {\r\n        source: array\r\n    }\r\n\r\n    handleChecked = (e:any, id: number) => {\r\n        const { onClick, source } = this.props;\r\n        console.log('123')\r\n\r\n        // eslint-disable-next-line array-callback-return\r\n        // source.filter((item) => {\r\n        //     if(item.id !== id) {\r\n        //         return item\r\n        //     }\r\n        // })\r\n\r\n        onClick(e)\r\n    }\r\n\r\n    render() {\r\n        const { className, source } = this.props;\r\n        return(\r\n            <FolderBlockRoot className={className}>\r\n                <FolderBlockContainer>\r\n                    { \r\n                        source && source.map((row) => (\r\n                            <FileFolder key={row.id} onClick={(e:any) => this.handleChecked(e, row.id)}>{row.name}</FileFolder>\r\n                        )) \r\n                    }\r\n                    \r\n                </FolderBlockContainer>\r\n                \r\n            </FolderBlockRoot>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default FolderBlock;\r\n\r\nconst FolderBlockRoot = styled.div`\r\n    max-width: 1110px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst FolderBlockContainer =styled.div`\r\n    margin: -12px -15px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n`;","import FolderBlock from './FolderBlock';\r\n\r\nexport default FolderBlock;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst array = [\r\n    {\r\n        id: 0,\r\n        icon: 'assets/img/ic-excel.svg',\r\n        name: 'Ad-benefit-august.csv',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '6 kb'\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: 'assets/img/ic-ppt.svg',\r\n        name: 'How To Pick A Right Web Font.pptx',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '32 mb'\r\n    },\r\n    {\r\n        id: 2,\r\n        icon: 'assets/img/ic-pdf.svg',\r\n        name: 'Presentation-Q1.pdf',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '10 mb'\r\n    },\r\n    {\r\n        id: 3,\r\n        icon: 'assets/img/ic-word.svg',\r\n        name: 'New document.doc',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '102 kb'\r\n    },\r\n    {\r\n        id: 4,\r\n        icon: 'assets/img/ic-unkown.svg',\r\n        name: 'Readme.txt',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '2 kb'\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    className?: string,\r\n    source?: Array<{\r\n        id: number,\r\n        icon: string,\r\n        name: string,\r\n        local: string,\r\n        time: string,\r\n        size: string\r\n    }>\r\n}\r\n\r\ninterface State {\r\n    source: Array<{\r\n        id: number,\r\n        icon: string,\r\n        name: string,\r\n        local: string,\r\n        time: string,\r\n        size: string\r\n    }>,\r\n    sortArray: number\r\n}\r\n\r\nclass List extends React.Component<Props, State> {\r\n    static defaultProps = {\r\n        source: array,\r\n        changeSwitch: true\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { source: props.source, sortArray:0 };\r\n    }\r\n\r\n    sortName = (e: MouseEvent,sortArray: number) => {\r\n        e.stopPropagation();\r\n        const { source } = this.state;\r\n        this.setState({\r\n            source: source.sort((a, b) => a.name > b.name ? 1 : -1),\r\n            sortArray: 1\r\n        })\r\n        if (sortArray === 2) {\r\n            this.setState({\r\n                source: source.sort((a, b) => a.name > b.name ? 1 : -1),\r\n                sortArray: 1\r\n            })\r\n        } else if (sortArray === 1) {\r\n            this.setState({\r\n                source: source.sort((a, b) => b.name > a.name ? 1 : -1),\r\n                sortArray: 2\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { className } = this.props;\r\n        const { source, sortArray } = this.state;\r\n        return(\r\n            <ListRoot className={className}>\r\n                <ListHead>\r\n                    <ListIcon />\r\n                    <ListName onClick={(e: any) => this.sortName(e, sortArray)}>Name\r\n                        {\r\n                            sortArray === 1 ? <Icon className='icon-arrow_downward-24px' /> : sortArray === 2 && (<Icon className='icon-arrow_upward-24px' />)\r\n                        }\r\n                    </ListName>\r\n                    <ListLocal>location</ListLocal>\r\n                    <ListTime>last modified</ListTime>\r\n                    <ListSize>size</ListSize>\r\n                </ListHead>\r\n                <ListBody>\r\n                    { source && source.map((row) => (\r\n                        <ListLi key={row.id}>\r\n                            <ListIcon>\r\n                                <img src={row.icon} alt=\"\" />\r\n                            </ListIcon>\r\n                            <ListName>{row.name}</ListName>\r\n                            <ListLocal>{row.local}</ListLocal>\r\n                            <ListTime>{row.time}</ListTime>\r\n                            <ListSize>{row.size}</ListSize>\r\n                        </ListLi>\r\n                    )) }\r\n                    \r\n                </ListBody>\r\n                \r\n\r\n            </ListRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List;\r\n\r\nconst ListRoot = styled.div`\r\n    max-width: 1110px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst ListIcon = styled.div`\r\n    flex: 1;\r\n    max-width: 95px;\r\n`;\r\n\r\nconst ListName = styled.div`\r\n    flex: 1;\r\n    max-width: 475px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n    margin-left: 20px;\r\n    font-size: 24px;\r\n`;\r\n\r\nconst ListLocal = styled.div`\r\n    flex: 1;\r\n    max-width: 190px;\r\n`;\r\n\r\nconst ListTime = styled.div`\r\n    flex: 1;\r\n    max-width: 190px;\r\n`;\r\n\r\nconst ListSize = styled.div`\r\n    flex: 1;\r\n    max-width: 160px;\r\n`;\r\n\r\nconst ListHead = styled.div`\r\n    display: flex;\r\n    padding: 16px 0;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border-bottom: 1px solid #D5D5D5;\r\n`;\r\n\r\nconst ListBody = styled.ul`\r\n\r\n`;\r\n\r\nconst ListLi = styled.li`\r\n    display: flex;\r\n    padding: 24px 0;\r\n    color: #707070;\r\n    border-bottom: 1px solid #D5D5D5;\r\n\r\n    ${ListIcon} {\r\n        padding-left: 24px;\r\n    }\r\n\r\n    ${ListName} {\r\n        color: #000;\r\n    }\r\n\r\n    ${ListLocal} {\r\n        text-transform: capitalize;\r\n    }\r\n\r\n    ${ListSize} {\r\n        text-transform: uppercase;\r\n    }\r\n\r\n`;","import List from './List';\r\n\r\nexport default List;","const initState = {\r\n    array: [\r\n    {\r\n        id: 0,\r\n        icon: 'assets/img/ic-excel.svg',\r\n        name: 'Ad-benefit-august.csv',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '6 kb'\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: 'assets/img/ic-ppt.svg',\r\n        name: 'How To Pick A Right Web Font.pptx',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '32 mb'\r\n    },\r\n    {\r\n        id: 2,\r\n        icon: 'assets/img/ic-pdf.svg',\r\n        name: 'Presentation-Q1.pdf',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '10 mb'\r\n    },\r\n    {\r\n        id: 3,\r\n        icon: 'assets/img/ic-word.svg',\r\n        name: 'New document123.doc',\r\n        local: 'my drive',\r\n        time: '2019/8/20',\r\n        size: '102 kb'\r\n    }\r\n    ]\r\n}\r\n\r\nconst ReducerRoot = (state = initState, action) => {\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport default ReducerRoot;","import React from 'react';\r\nimport { createStore,compose } from 'redux';\r\nimport styled from 'styled-components';\r\n\r\nimport Navbar from 'resources/components/organisms/Navbar';\r\nimport ToolBar from 'resources/components/organisms/ToolBar';\r\nimport ListBar from 'resources/components/organisms/ListBar';\r\n\r\nimport FolderBlock from 'resources/components/molecules/FolderBlock'\r\nimport List from 'resources/components/organisms/List';\r\n\r\nimport ReducerRoot from './reducer/index';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(\r\n  ReducerRoot,\r\n  composeEnhancers()\r\n)\r\n\r\nconst array = [\r\n  {\r\n    id: 0,\r\n    icon: 'assets/img/ic-excel.svg',\r\n    name: 'Ad-benefit-august.csv',\r\n    local: 'my drive',\r\n    time: '2019/8/20',\r\n    size: '6 kb'\r\n  },\r\n  {\r\n    id: 1,\r\n    icon: 'assets/img/ic-ppt.svg',\r\n    name: 'How To Pick A Right Web Font.pptx',\r\n    local: 'my drive',\r\n    time: '2019/8/20',\r\n    size: '32 mb'\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: 'assets/img/ic-pdf.svg',\r\n    name: 'Presentation-Q1.pdf',\r\n    local: 'my drive',\r\n    time: '2019/8/20',\r\n    size: '10 mb'\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: 'assets/img/ic-word.svg',\r\n    name: 'New document123.doc',\r\n    local: 'my drive',\r\n    time: '2019/8/20',\r\n    size: '102 kb'\r\n  }\r\n]\r\n\r\ninterface Props { }\r\n\r\ninterface State { \r\n  Advanced: boolean\r\n}\r\n\r\nclass App extends React.Component<Props, State> {\r\n  state = {\r\n    Advanced: false\r\n  }\r\n\r\n  handleOpenAdvanced = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      Advanced: true\r\n    })\r\n  }\r\n\r\n  handleCloseAdvanced = () => {\r\n    this.setState({\r\n      Advanced: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { Advanced } = this.state\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"App\" onClick={this.handleCloseAdvanced}>\r\n          <Navbar />\r\n          <ToolBar Advanced={Advanced}/>\r\n          <ListBar showIcon>folders</ListBar>\r\n          <FolderBlock onClick={this.handleOpenAdvanced}/>\r\n          <ListBar showIcon>files</ListBar>\r\n          <List source={array} />\r\n          <ListBarFooter showIcon={false}>storage</ListBarFooter>\r\n        </div>\r\n      </Provider>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nconst ListBarFooter = styled(ListBar)`\r\n  background-color: #fff;\r\n  padding: 24px 0;\r\n`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport './index.css';\r\nimport './resources/assets/icon/style.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}